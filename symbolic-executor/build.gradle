plugins {
    id 'java'
    id 'groovy'
    id 'eclipse'
    id 'application'
    id 'io.freefair.lombok' version '8.4'
}

tasks.withType(JavaCompile).configureEach {
    options.incremental = true // one flag, and things will get MUCH faster
}


repositories {
    mavenCentral()
}

// In this section you declare the dependencies for your production and test code
dependencies {

    implementation libs.bundles.asm
    implementation libs.bundles.httpcomponents
    implementation libs.jackson.databind
    implementation libs.gson
    implementation libs.java.smt

    implementation rootProject.fileTree(dir: 'libs/java-library-path', include: ['*.jar']) // loads com.microsoft.z3

    testImplementation libs.spock.core
    testImplementation libs.jackson.databind
    testImplementation libs.mockito.core
}

test {
    systemProperty "java.library.path", "../libs/java-library-path"
}

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    manifest {
        attributes (
                "Can-Redefine-Classes": true,
                "Can-Retransform-Classes": true,
                'Premain-Class': 'de.uzl.its.swat.instrument.Transformer')
    }

    from {
        exclude '**/module-info.class'
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }

}


tasks.register('copyJar', Copy) {
    from jar
    into 'lib'
    rename (String fileName) -> { fileName = 'symbolic-executor.jar' }
}




test {
    useJUnitPlatform()
}

// Set duplicate strategy to remove a warning
distTar.setDuplicatesStrategy(DuplicatesStrategy.INCLUDE)
distZip.setDuplicatesStrategy(DuplicatesStrategy.INCLUDE)

build.finalizedBy copyJar
